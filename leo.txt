# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class Djgleoapp001Country(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', max_length=50)  # Field name made lowercase.
    abbr = models.CharField(db_column='Abbr', max_length=2)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_country'


class Djgleoapp001Dates(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    date = models.DateTimeField(db_column='Date')  # Field name made lowercase.
    locationid = models.ForeignKey('Djgleoapp001Locations', models.DO_NOTHING, db_column='LocationId')  # Field name made lowercase.
    examupdated = models.NullBooleanField(db_column='ExamUpdated')  # Field name made lowercase.
    examupdateddt = models.DateTimeField(db_column='ExamUpdatedDT', blank=True, null=True)  # Field name made lowercase.
    examposted = models.NullBooleanField(db_column='ExamPosted')  # Field name made lowercase.
    examposteddt = models.DateTimeField(db_column='ExamPostedDT', blank=True, null=True)  # Field name made lowercase.
    comments = models.TextField(db_column='Comments', blank=True, null=True)  # Field name made lowercase.
    results = models.TextField(db_column='Results', blank=True, null=True)  # Field name made lowercase.
    peopleid = models.ForeignKey('Djgleoapp001People', models.DO_NOTHING, db_column='PeopleId')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_dates'


class Djgleoapp001Datesexamlog(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    dateid = models.IntegerField(db_column='DateId')  # Field name made lowercase.
    examid = models.IntegerField(db_column='ExamId')  # Field name made lowercase.
    mmid = models.IntegerField(db_column='MMId', blank=True, null=True)  # Field name made lowercase.
    result_n = models.TextField(db_column='Result_N', blank=True, null=True)  # Field name made lowercase.
    result_t = models.TextField(db_column='Result_T', blank=True, null=True)  # Field name made lowercase.
    updated = models.NullBooleanField(db_column='Updated')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_datesexamlog'


class Djgleoapp001Djangomigrations(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_djangomigrations'


class Djgleoapp001Examminmax(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    mmid = models.IntegerField(db_column='MMId', blank=True, null=True)  # Field name made lowercase.
    mfa = models.IntegerField(db_column='MFA')  # Field name made lowercase.
    minvalue = models.TextField(db_column='MinValue', blank=True, null=True)  # Field name made lowercase.
    maxvalue = models.TextField(db_column='MaxValue', blank=True, null=True)  # Field name made lowercase.
    examid = models.ForeignKey('Djgleoapp001Examname', models.DO_NOTHING, db_column='ExamId')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_examminmax'


class Djgleoapp001Examname(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.TextField(db_column='Name', unique=True)  # Field name made lowercase.
    sname = models.CharField(db_column='SName', max_length=25)  # Field name made lowercase.
    groupexam_id = models.IntegerField(db_column='GroupExam_Id')  # Field name made lowercase.
    mm_id = models.IntegerField(db_column='MM_Id')  # Field name made lowercase.
    min = models.TextField(db_column='Min', blank=True, null=True)  # Field name made lowercase.
    max = models.TextField(db_column='Max', blank=True, null=True)  # Field name made lowercase.
    comments = models.CharField(db_column='Comments', max_length=250, blank=True, null=True)  # Field name made lowercase.
    is_numeric = models.NullBooleanField(db_column='Is_Numeric')  # Field name made lowercase.
    is_text = models.NullBooleanField(db_column='Is_Text')  # Field name made lowercase.
    is_memo = models.NullBooleanField(db_column='Is_Memo')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_examname'


class Djgleoapp001Examschema(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', unique=True, max_length=150, blank=True, null=True)  # Field name made lowercase.
    sequence = models.CharField(db_column='Sequence', max_length=50, blank=True, null=True)  # Field name made lowercase.
    notes = models.CharField(db_column='Notes', max_length=150, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_examschema'


class Djgleoapp001Examschemadet(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    groupexamid = models.IntegerField(db_column='GroupExamId')  # Field name made lowercase.
    aa = models.IntegerField(db_column='AA')  # Field name made lowercase.
    examschemaid = models.ForeignKey(Djgleoapp001Examschema, models.DO_NOTHING, db_column='ExamSchemaid')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_examschemadet'


class Djgleoapp001Groupexam(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', max_length=100)  # Field name made lowercase.
    sname = models.CharField(db_column='SName', max_length=50)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_groupexam'


class Djgleoapp001Groupmm(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', max_length=50, blank=True, null=True)  # Field name made lowercase.
    sname = models.CharField(db_column='SName', max_length=20, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_groupmm'


class Djgleoapp001Keystable(models.Model):
    table = models.CharField(db_column='Table', primary_key=True, max_length=20)  # Field name made lowercase.
    currentkey = models.IntegerField(db_column='CurrentKey')  # Field name made lowercase.
    updated = models.DateTimeField(db_column='Updated', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_keystable'


class Djgleoapp001Locations(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', unique=True, max_length=50)  # Field name made lowercase.
    address = models.CharField(db_column='Address', max_length=200, blank=True, null=True)  # Field name made lowercase.
    phone = models.CharField(db_column='Phone', max_length=60, blank=True, null=True)  # Field name made lowercase.
    mail = models.CharField(db_column='Mail', max_length=50, blank=True, null=True)  # Field name made lowercase.
    tk = models.CharField(db_column='TK', max_length=5, blank=True, null=True)  # Field name made lowercase.
    text = models.TextField(db_column='Text', blank=True, null=True)  # Field name made lowercase.
    hospital = models.NullBooleanField(db_column='Hospital')  # Field name made lowercase.
    medicalcenter = models.NullBooleanField(db_column='MedicalCenter')  # Field name made lowercase.
    eopyy = models.NullBooleanField(db_column='EOPYY')  # Field name made lowercase.
    contact = models.TextField(db_column='CONTACT', blank=True, null=True)  # Field name made lowercase.
    countryid = models.ForeignKey(Djgleoapp001Country, models.DO_NOTHING, db_column='CountryId')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_locations'


class Djgleoapp001Mfa(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    fromage = models.IntegerField(db_column='FromAge')  # Field name made lowercase.
    toage = models.IntegerField(db_column='ToAge')  # Field name made lowercase.
    sex = models.IntegerField(db_column='SEX')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_mfa'


class Djgleoapp001Mm(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', max_length=50, blank=True, null=True)  # Field name made lowercase.
    sname = models.CharField(db_column='SName', max_length=8, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_mm'


class Djgleoapp001Mm2Mm(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    fromid = models.IntegerField(db_column='Fromid')  # Field name made lowercase.
    toid = models.IntegerField(db_column='Toid')  # Field name made lowercase.
    text = models.CharField(db_column='Text', max_length=50, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_mm2mm'


class Djgleoapp001People(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(db_column='Name', max_length=30)  # Field name made lowercase.
    surname = models.CharField(db_column='Surname', max_length=50)  # Field name made lowercase.
    dateofbirth = models.DateField(db_column='DateOfBirth', blank=True, null=True)  # Field name made lowercase.
    nationality = models.CharField(db_column='Nationality', max_length=20, blank=True, null=True)  # Field name made lowercase.
    idoncontry = models.CharField(db_column='IdOnContry', max_length=20, blank=True, null=True)  # Field name made lowercase.
    phone = models.CharField(db_column='Phone', max_length=20, blank=True, null=True)  # Field name made lowercase.
    fax = models.CharField(db_column='Fax', max_length=20, blank=True, null=True)  # Field name made lowercase.
    mail = models.CharField(db_column='Mail', max_length=50, blank=True, null=True)  # Field name made lowercase.
    ispatient = models.NullBooleanField(db_column='IsPatient')  # Field name made lowercase.
    isdoctor = models.NullBooleanField(db_column='IsDoctor')  # Field name made lowercase.
    canlogin = models.NullBooleanField(db_column='CanLogin')  # Field name made lowercase.
    accessonlyhisfile = models.NullBooleanField(db_column='AccessOnlyHisFile')  # Field name made lowercase.
    notes = models.CharField(db_column='Notes', max_length=8192, blank=True, null=True)  # Field name made lowercase.
    photo = models.BinaryField(db_column='Photo', blank=True, null=True)  # Field name made lowercase.
    countryid = models.ForeignKey(Djgleoapp001Country, models.DO_NOTHING, db_column='CountryId')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_people'


class Djgleoapp001Sqlitespfunctions(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.TextField(blank=True, null=True)
    text = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_sqlitespfunctions'


class Djgleoapp001Sqlitestat1(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    tbl = models.TextField(blank=True, null=True)
    idx = models.TextField(blank=True, null=True)
    stat = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_sqlitestat1'


class Djgleoapp001Sqlitevslinksnames(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.TextField(blank=True, null=True)
    alias = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_sqlitevslinksnames'


class Djgleoapp001Sqlitevsproperties(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    parenttype = models.TextField(db_column='parentType', blank=True, null=True)  # Field name made lowercase.
    parentname = models.TextField(db_column='parentName', blank=True, null=True)  # Field name made lowercase.
    propertyname = models.TextField(db_column='propertyName', blank=True, null=True)  # Field name made lowercase.
    propertyvalue = models.TextField(db_column='propertyValue', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'DjgLeoApp001_sqlitevsproperties'


class AuthGroup(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    name = models.CharField(unique=True, max_length=80)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)
    name = models.CharField(max_length=255)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.BooleanField()
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)
    email = models.CharField(max_length=254)
    is_staff = models.BooleanField()
    is_active = models.BooleanField()
    date_joined = models.DateTimeField()
    username = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)


class DjangoAdminLog(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.PositiveSmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    action_time = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    id = models.IntegerField(primary_key=True)  # AutoField?
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'
